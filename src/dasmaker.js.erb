//
// EpisoDASのDASパタンを登録
//

dasmaker = function(data,selections){
    var mousedown = false;
    var curdiv = null; // 現在選択中のdiv (letじゃ駄目)
    
    var selected = [];
    var finished = false; // finish() が二度呼ばれるのを防止
    
    var browserWidth = function(){  
	if(window.innerWidth){ return window.innerWidth; }  
	else if(document.body){ return document.body.clientWidth; }  
	return 0;  
    };
    
    var browserHeight = function(){  
	if(window.innerHeight){ return window.innerHeight; }  
	else if(document.body){ return document.body.clientHeight; }  
	return 0;  
    };
    
    function shuffle(array){
	for(var i = array.length - 1; i > 0; i--){
	    var r = Math.floor(Math.random() * (i + 1));
	    [array[i], array[r]] = [array[r], array[i]]
	}
    }
    
    function finish(){ // DAS登録後の処理
	if(finished) return; // 何故か二度呼ばれることを防止
	finished = true;

	// dataを複製
	var newdata = {}
	newdata['name'] = data['name']
	newdata['seed'] = data['seed']
	newdata['qas'] = [];
	for(let i = 0; i < data['qas'].length; i++){
	    let o = {};
	    o['question'] = data['qas'][i]['question']
	    o['answers'] = []
	    for(let j=0;j<data['qas'][i]['answers'].length;j++){
		o['answers'][j] = data['qas'][i]['answers'][j]
	    }
	    newdata['qas'].push(o);
	}
	
	// newdataの回答リストをシャフル
	for(let i=0;i<selected.length;i++){
	    var answers = newdata['qas'][i].answers
	    var rightanswer = answers[selections[i]]; // 正答

	    shuffle(answers); // 答をランダムに並べかえ

	    // 正答がselected[i]の位置に来るようにする
	    for(let j = 0; j < answers.length; j++){
		if(answers[j] == rightanswer){
		    /*
		     このコードが何故か動ず無限ループになってしまう
		     let s = selected[i]
		     [answers[j], answers[s]] = [answers[s], answers[j]] // 交換
		     */
		    let tmp = answers[j]
		    answers[j] = answers[selected[i]]
		    answers[selected[i]] = tmp
		    break;
		}
	    }
	    newdata.qas[i].answers = answers
	}

	//alert('DASデータを生成しました。確認して下さい。');

	lib.lib.make_html(newdata);
	episodas.episodas(newdata);
    }
    
    function initsize(){
	// width = browserWidth();
	let width = $('#contents').width();
	let height = browserHeight();

	// 回答を並べる。"dmid0" のようなIDになっている
	for(var i=0;i<answers.length;i++){
	    div = $('#dmid'+i);
	    div.css('background-color','#fff');
	    div.css('width',width / 6.8);
	    div.css('height',height / 10);
	    div.css('font-size',width * 0.04);
	    
	    // FlexBoxでセンタリング
	    div.css('display','flex');
	    div.css('justify-content','center');
	    div.css('align-items','center');
	    
	    div.css('margin',width / 100);
	    div.css('padding',width / 100);

	    div.css('border-style','solid');
            div.css('border-radius',width*0.01);
            div.css('border-color','#000');
	    div.css('border-width','1px');
	    //div.css('box-shadow','5px 5px 4px #888');
	}
	$('#dmquestion').css('font-size',width * 0.06);
    }

    //
    // クリックイベントもドラッグイベントもmouseenter(), mouseleave()で扱う
    //
    function mouseenter(div){
	curdiv = div;
	if(mousedown){
            curdiv.css('background-color','#f3f3f3');
	    // curdiv.css('background-image','url("http://kenz0.s201.xrea.com/images/2013/02/04/01.gif")')
	    //curdiv.css('background-image','url("https://i.gifer.com/SzjJ.gif")')
	    //curdiv.css('background-image','url("https://thumbs.gfycat.com/PartialSadImperatorangel-size_restricted.gif")')
	    //curdiv.css('background-image','url("https://media.giphy.com/media/vxcuu6bLZDdm0/200.gif")')
	    //curdiv.css('background-image','url("https://i.imgur.com/U5Ccc0f.gif")')
	    <% require 'base64' %>
	    //s = '= Base64.encode64(File.read("src/fb67c5f5c0b3964dd3f986fb4f0d891c.gif")).gsub("\n","") %>'
	    //s = '<%= Base64.encode64(File.read("src/noise.gif")).gsub("\n","") %>'
	    //curdiv.css('background-image',`url("data:image/gif;base64,${s}")`);
	    curdiv.css('background-image','url("data:image/gif;base64,<%= Base64.encode64(File.read("src/noise.gif")).gsub("\n","") %>")');
	    w = curdiv.css('width')
	    h = curdiv.css('height')
	    curdiv.css('background-size',`${w} ${h}`)
	    selected.push(curdiv.attr('id').replace(/dmid/,''))
	}
    }
    
    function mouseleave(div){
	if(mousedown){
            curdiv.css('background-color','#fff');
	    curdiv.css('background-image','');
	    if(selected.length == qas.length){
	    	mousedown = false
		finish();
            }
	}
	curdiv = null;
    }
    
    function mousemove(e){
	//if($('#id0')[0] == undefined) return;
	if(! mousedown) return;

	var mousex = (e.pageX ? e.pageX : e.originalEvent.touches[0].pageX);
	var mousey = (e.pageY ? e.pageY : e.originalEvent.touches[0].pageY);
	for(var i=0;i<answers.length;i++){
            let buttondiv = $('#dmid'+i);
            buttonx = buttondiv.offset().left;
            buttony = buttondiv.offset().top;
            buttonw = buttondiv.width();
            buttonh = buttondiv.height();
            if(buttonx < mousex && buttonx+buttonw > mousex &&
               buttony < mousey && buttony+buttonh > mousey){
		if(!curdiv || (curdiv.attr('id') != buttondiv.attr('id'))){
                    if(curdiv){
			mouseleave(curdiv);
                    }
                    mouseenter(buttondiv);
                    curdiv = buttondiv;
		}
		return;
            }
	}
	if(curdiv){
            mouseleave(curdiv);
	}
    }
    
    function init(){
	lib.lib.show('#dasmaker')

	qas = data['qas'];
	
	//alert(`登録したいパタンで${qas.length}個のボタンを押すかなぞって下さい。`);
	
	mousedown = false;
	selected = [];
	
	$(window).on('resize',initsize);
	
	$('#dasmaker').children().remove();
	$('#dasmaker').on('mousemove',mousemove);
	$('#dasmaker').on('touchmove',mousemove);
	
	var center = $('<center>');
	$('#dasmaker').append(center);
	
	var qdiv = $('<div>');
	qdiv.text('DASパタンを入力して下さい');
	qdiv.height(100);
	qdiv.css('display','flex');
	qdiv.css('justify-content','center');
	qdiv.css('align-items','center');
	qdiv.attr('id','dmquestion');
	center.append(qdiv);

	let comment = $('<span>');
	comment.text(`${qas.length}個のボタンを押すかなぞってパタンを登録して下さい`);
	center.append(comment)
	
	center.append($('<p>'));
	
	// 回答領域
	answers = qas[0].answers; // 回答の数は同じということを仮定

	for(var i=0;i<answers.length;i++){
	    var div = $('<div>');
	    div.css('float','left');
	    div.attr('id','dmid'+i);
	    center.append(div);
	    
            div.on('mousedown',function(e){
                e.preventDefault();
                mousedown = true;
                curdiv = null;
                mousemove(e);
            });
            div.on('touchstart',function(e){
                e.preventDefault();
                mousedown = true;
                curdiv = null;
                mousemove(e);
            });
            div.on('mouseup',function(e){
                if(curdiv) mouseleave(curdiv);
                mousedown = false;
                curdiv = null;
            });
            div.on('touchend',function(e){
                if(curdiv) mouseleave(curdiv);
                mousedown = false;
                curdiv = null;
            });
	}
	
	initsize();
    }

    init();
}

exports.dasmaker = dasmaker;
